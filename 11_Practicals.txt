Name- Suyash N Shinde
Assignment No.1
import java.util.Scanner;

public class Assignment1 {
    
    public static void main(String[] args) {
         
         Scanner in = new Scanner(System.in);
         
         System.out.print("Input first number: ");
         int num1 = in.nextInt();
         
         System.out.print("Input second number: ");
         int num2 = in.nextInt();
         
         System.out.print("Input third number: ");
         int num3 = in.nextInt();
         
         System.out.print("Input fourth number: ");
         int num4 = in.nextInt();
         in.close();
        
        if (num1 == num2 && num2 == num3 && num3 == num4) 
          {
            System.out.println("Numbers are equal");
                               }
        else
            {
            System.out.println("Numbers are not equal");
        }
    }
}  
 

 
Output-                               



















Name- Suyash N Shinde
Assignment No.2
/*Assignment-2*/

public class Student2 {
    
    String name;
    int RollNo;
    
    void getData(String n, int r){
        name = n;
        RollNo = r;
    }
    
    void printData(){
        System.out.println("Name : "+name);
        System.out.println("RollNo : "+RollNo);
    }
    
    public static void main(String[] args){
        Student2 s1 = new Student2();
        s1.getData("Suyash", 34);
        s1.printData();
        
        Student2 s2 = new Student2();
        s2.getData("Aadi", 44);
        s2.printData();
    }
}

Output- 


















Name- Suyash N Shinde
Assignment No.3
/*Assignment-3*/

class Vehicle
{
    String regno;
    String color;
            String type_of_vehicle;
    Vehicle(String r, String cr, String t)
    {
        regno=r;
        color=cr;
        type_of_vehicle= t;
    }
    void display()
    {
        System.out.println("Registration no: "+regno);
        System.out.println("Color: "+color);
        System.out.println("Type: "+type_of_vehicle);
    }
}

class Car extends Vehicle
{
    int make;
      int cc;
      String fuel;
    Car(String r, String cr, String t, int m, int c, String f)
    {
        super(r,cr,t);
        make=m;
        cc=c;
        fuel=f;
    }
    void display()
    {
        System.out.println("Car Details are:");
        super.display();
        System.out.println("Making Year : " +make);
        System.out.println("Cubic capacity: " +cc);
        System.out.println("Fuel Type:\n" +fuel);
    }
}

class Truck extends Vehicle
{
      int make;
      int cc;
      String fuel;
      Truck(String r, String cr, String t, int m, int c, String f)

      {
        super(r,cr,t);
        make=m;
        cc=c;
        fuel=f;
    }
    void display()
    {
        System.out.println("Truck Details");
        super.display();
        System.out.println("Making Year : " +make);
        System.out.println("Cubic capacity: " +cc);
        System.out.println("Fuel Type:\n " +fuel);

    }
}

class Motorcycle extends Vehicle
{
    int make;
    int cc;
    String fuel;
    Motorcycle(String r, String cr, String t, int m, int c, String f)
    {
        super(r,cr,t);
        make=m;
        cc=c;
        fuel=f;
    }
    void display()
    {
        System.out.println("Motorcycle Details");
        super.display();
        System.out.println("Making Year : " +make);
        System.out.println("Boot Space: " +cc);
        System.out.println("Fuel Type:\n " +fuel);

    }
}
public class VehicleDemo 
{
    public static void main(String arg[])
    {
        Car c1;
        Truck t1;
        Motorcycle m1;
        
        c1=new Car("MH13QW3233", "Black","Four wheeler",2022,574,"Petrol" );
        t1=new Truck("MH12PG0185","Brown","Six wheeler",2019,35000,"Diesel");
        m1=new Motorcycle ("MH13BY3686","Grey","Two wheeler",2014,10,"Petrol");
        
        c1.display();
        t1.display();
        m1.display();
    }
}


Output-
 







Name- Suyash N Shinde
Assignment No.4
import java.util.Scanner;

public class Student {
    private String name;
    private String city;
    private int age;

    public void addData() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter name: ");
        name = scanner.nextLine();
        System.out.print("Enter city: ");
        city = scanner.nextLine();
        System.out.print("Enter age: ");
        age = scanner.nextInt();
    }

    public void printData() {
        System.out.println("Name: " + name);
        System.out.println("City: " + city);
        System.out.println("Age: " + age);
    }

    public static void main(String[] args) {
        Student s1 = new Student();
        Student s2 = new Student();

        System.out.println("Enter data for student 1:");
        s1.addData();

        System.out.println("Enter data for student 2:");
        s2.addData();

        System.out.println("Student 1 data:");
        s1.printData();

        System.out.println("Student 2 data:");
        s2.printData();
    }
}




Output-
 















Name- Suyash N Shinde
Assignment No.5
/*Assignment No.-05*/
import java.util.Random;

public class MultiThread {
    public static void main(String[] args) {
        NumberGeneratorThread generatorThread = new NumberGeneratorThread();
        SquareComputationThread squareThread = new SquareComputationThread();
        CubeComputationThread cubeThread = new CubeComputationThread();
        
        generatorThread.setSquareThread(squareThread);
        generatorThread.setCubeThread(cubeThread);
        
        generatorThread.start();
        squareThread.start();
        cubeThread.start();
    }
}

class NumberGeneratorThread extends Thread {
    private SquareComputationThread squareThread;
    private CubeComputationThread cubeThread;
    
    public void setSquareThread(SquareComputationThread squareThread) {
        this.squareThread = squareThread;
    }
    
    public void setCubeThread(CubeComputationThread cubeThread) {
        this.cubeThread = cubeThread;
    }
    
    public void run() {
        Random random = new Random();
        while (true) {
            int number = random.nextInt(100);
            System.out.println("Generated number: " + number);
            if (number % 2 == 0) {
                squareThread.setNumber(number);
            } else {
                cubeThread.setNumber(number);
            }
            try {
                sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

class SquareComputationThread extends Thread {
    private int number;
    
    public void setNumber(int number) {
        this.number = number;
    }
    
    public void run() {
        while (true) {
            if (number % 2 == 0) {
                int square = number * number;
                System.out.println("Square of " + number + ": " + square);
            }
            try {
                sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

class CubeComputationThread extends Thread {
    private int number;
    
    public void setNumber(int number) {
        this.number = number;
    }
    
    public void run() {
        while (true) {
            if (number % 2 == 1) {
                int cube = number * number * number;
                System.out.println("Cube of " + number + ": " + cube);
            }
            try {
                sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

Output-
 












Name- Suyash N Shinde
Assignment No.6
public abstract class Shape {
   int length;
   int breadth;
   
   public abstract void printArea();
}

class Rectangle1 extends Shape{
   public Rectangle1(int length, int breadth){
      this.length = length;
      this.breadth = breadth;
   }
   @Override
   public void printArea(){
      System.out.println("The area of Rectangle is: " + length*breadth);
   }
}

class Triangle extends Shape{
   public Triangle(int length, int breadth){
      this.length = length;
      this.breadth = breadth;
   }
   @Override
   public void printArea(){
      System.out.println("The area of Triangle is: " + length*breadth/2);
   }
}

class Circle1 extends Shape{
   public Circle1(int radius){
      this.length = radius;
   }
   @Override
   public void printArea(){
      System.out.println("The area of Circle is: " + 3.14*length*length);
   }
}

class Main{
   public static void main(String[] args) {
      Shape rect = new Rectangle1(10,20);
      rect.printArea();
      
      Shape tri = new Triangle(10,20);
      tri.printArea();
      
      Shape circle = new Circle1(10);
      circle.printArea();
   }
}

Output-
 













Name- Suyash N Shinde
Assignment No.7
import java.awt.*;
import java.awt.event.*;

public class Calculator extends Frame implements ActionListener {
    private TextField displayField;
    private Button[] buttons;
    private String[] buttonLabels = { "7", "8", "9", "/", "4", "5", "6", "*", "1", "2", "3", "-", "0", ".", "=", "+" };
    private double result = 0;
    private String operator = "=";
    private boolean startOfNumber = true;

    public Calculator() {
        displayField = new TextField("", 20);
        buttons = new Button[buttonLabels.length];

        // Create buttons
        for (int i = 0; i < buttonLabels.length; i++) {
            buttons[i] = new Button(buttonLabels[i]);
            buttons[i].addActionListener(this);
        }

        // Set layout
        setLayout(new BorderLayout());
        add(displayField, BorderLayout.NORTH);

        // Add buttons to the frame
        Panel buttonPanel = new Panel();
        buttonPanel.setLayout(new GridLayout(4, 4));
        for (int i = 0; i < buttonLabels.length; i++) {
            buttonPanel.add(buttons[i]);
        }
        add(buttonPanel, BorderLayout.CENTER);

        // Add window listener
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                dispose();
            }
        });

        // Set frame properties
        setTitle("Calculator");
        setSize(300, 300);
        setVisible(true);
    }

    public void actionPerformed(ActionEvent e) {
        String label = e.getActionCommand();
        if (label.equals("C")) {
            result = 0;
            operator = "=";
            displayField.setText("");
            startOfNumber = true;
        } else if ("0123456789.".indexOf(label) != -1) {
            if (startOfNumber) {
                displayField.setText(label);
            } else {
                displayField.setText(displayField.getText() + label);
            }
            startOfNumber = false;
        } else {
            if (startOfNumber) {
                if (label.equals("-")) {
                    displayField.setText(label);
                    startOfNumber = false;
                } else {
                    operator = label;
                }
            } else {
                double x = Double.parseDouble(displayField.getText());
                calculate(x);
                operator = label;
                startOfNumber = true;
            }
        }
    }

    private void calculate(double n) {
        if (operator.equals("+")) {
            result += n;
        } else if (operator.equals("-")) {
            result -= n;
        } else if (operator.equals("*")) {
            result *= n;
        } else if (operator.equals("/")) {
            result /= n;
        } else if (operator.equals("=")) {
            result = n;
        }
        displayField.setText("" + result);
    }

    public static void main(String[] args) {
        new Calculator();
    }
}


Output-
                          














Name- Suyash N Shinde
Assignment No.8
import java.awt.Button;
import java.awt.Frame;
import java.awt.Panel;
//import java.awt.TextField;

public class AWTButtonExample {
    public static void main(String[] args) {

        Frame frame = new Frame("AWT Button Example");
        Button button = new Button("Click Me");
        //TextField textfield = new TextField(  );
        Panel panel = new Panel();
        panel.add(button);

        frame.add(panel);
        
        frame.setSize(300, 200);
        //frame.add(textfield);
       
        frame.setVisible(true);
        
    }
}


Output-
                            


Name- Suyash N Shinde
Assignment No-9
import java.util.Scanner;

class Student
{
    String name;
    int roll;
    
    void getData()
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter name of student");
        name = sc.next();
        System.out.println("Enter roll no of student");
        roll = sc.nextInt();
        
    }
    
    void showData()
    {
        System.out.println("Name of student is "+name);
        System.out.println("Roll no of student is "+roll);
    }
}

class Exam extends Student
{
    int m1,m2,m3;
    
    void getMarks()
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter marks of 3 subjects");
        m1 = sc.nextInt();
        m2 = sc.nextInt();
        m3 = sc.nextInt();
        
    }
    
    void show()
    {
        System.out.println("Marks of subject 1 is "+m1);
        System.out.println("Marks of subject 2 is "+m2);
        System.out.println("Marks of subject 3 is "+m3);
    }
}

class Result extends Exam
{
    int total;
    float per;
    
    void showResult()
    {
        total = m1+m2+m3;
        per = total/3;
        System.out.println("Total marks is "+total);
        System.out.println("Percentage is "+per);
    }
}

class StudentExamInfo
{
    public static void main(String args[])
    {
        Result r = new Result();
        r.getData();
        r.getMarks();
        r.showData();
        r.show();
        r.showResult();
    }
}

Output-
 

Name- Suyash N Shinde
Assignment No.10
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class TrafficLight implements ActionListener {
    private JFrame frame;
    private JPanel panel;
    private JRadioButton redButton;
    private JRadioButton yellowButton;
    private JRadioButton greenButton;
    private ButtonGroup buttonGroup;
    private JLabel messageLabel;

    public TrafficLight() {
        // Create the frame
        frame = new JFrame("Traffic Light");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 400);
        frame.setLayout(new BorderLayout());

        // Create the panel with radio buttons
        panel = new JPanel(new GridLayout(4, 1));

        redButton = new JRadioButton("Red");
        yellowButton = new JRadioButton("Yellow");
        greenButton = new JRadioButton("Green");

        buttonGroup = new ButtonGroup();
        buttonGroup.add(redButton);
        buttonGroup.add(yellowButton);
        buttonGroup.add(greenButton);

        redButton.addActionListener(this);
        yellowButton.addActionListener(this);
        greenButton.addActionListener(this);

        panel.add(redButton);
        panel.add(yellowButton);
        panel.add(greenButton);

        // Create the message label
        messageLabel = new JLabel("");
        messageLabel.setHorizontalAlignment(JLabel.CENTER);
        messageLabel.setVerticalAlignment(JLabel.CENTER);
        messageLabel.setFont(new Font("Arial", Font.BOLD, 24));

        // Add the panel and message label to the frame
        frame.add(panel, BorderLayout.CENTER);
        frame.add(messageLabel, BorderLayout.NORTH);

        // Show the frame
        frame.setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == redButton) {
            messageLabel.setForeground(Color.RED);
            messageLabel.setText("STOP");
        } else if (e.getSource() == yellowButton) {
            messageLabel.setForeground(Color.YELLOW);
            messageLabel.setText("READY");
        } else if (e.getSource() == greenButton) {
            messageLabel.setForeground(Color.GREEN);
            messageLabel.setText("GO");
        }
    }

    public static void main(String[] args) {
        TrafficLight trafficLight = new TrafficLight();
    }
}









                   
                   


Name- Suyash N Shinde
Assignment No.11
import java.sql.*;

public class DatabaseOperations {
    private static final String DB_URL = "jdbc:mysql://localhost:3306/mydb";
    private static final String USER = "root";
    private static final String PASSWORD = "password";
    private static final String TABLE_NAME = "students";

    public static void main(String[] args) {
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;

        try {
            // Establish a connection to the database
            conn = DriverManager.getConnection(DB_URL, USER, PASSWORD);

            // Create a table if it doesn't exist
            stmt = conn.createStatement();
            String createTableSql = "CREATE TABLE IF NOT EXISTS " + TABLE_NAME +
                                    " (id INT NOT NULL AUTO_INCREMENT, " +
                                    "name VARCHAR(50), " +
                                    "age INT, " +
                                    "PRIMARY KEY (id))";
            stmt.executeUpdate(createTableSql);

            // Add a record to the table
            String addRecordSql = "INSERT INTO " + TABLE_NAME + " (name, age) VALUES (?, ?)";
            PreparedStatement pstmt = conn.prepareStatement(addRecordSql);
            pstmt.setString(1, "John");
            pstmt.setInt(2, 25);
            pstmt.executeUpdate();

            // Retrieve all records from the table
            String retrieveRecordsSql = "SELECT * FROM " + TABLE_NAME;
            rs = stmt.executeQuery(retrieveRecordsSql);
            while (rs.next()) {
                int id = rs.getInt("id");
                String name = rs.getString("name");
                int age = rs.getInt("age");
                System.out.println("ID: " + id + ", Name: " + name + ", Age: " + age);
            }

            // Modify a record in the table
            String modifyRecordSql = "UPDATE " + TABLE_NAME + " SET name = ? WHERE id = ?";
            pstmt = conn.prepareStatement(modifyRecordSql);
            pstmt.setString(1, "Alice");
            pstmt.setInt(2, 1);
            pstmt.executeUpdate();

            // Delete a record from the table
            String deleteRecordSql = "DELETE FROM " + TABLE_NAME + " WHERE id = ?";
            pstmt = conn.prepareStatement(deleteRecordSql);
            pstmt.setInt(1, 2);
            pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                // Close the resources
                if (rs != null) {
                    rs.close();
                }
                if (stmt != null) {
                    stmt.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
}


